{"version":3,"sources":["components/Section.js","components/HomePage.js","components/Header.js","App.js","features/counter/counterAPI.js","features/counter/counterSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["Section","props","Wrap","bgImage","backgroundImage","bgRuta","ruta","bottom","ItemText","title","description","Buttons","ButtonGroup","LeftButton","LButtonText","RButtonText","RigthButton","DownArrow","src","Styled","div","img","HomePage","Ruta","Path","pathUrlProd","Container","Header","alt","href","RigthMenu","CustomMenu","BurgerMenu","Menu","MenuIcon","App","className","fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","name","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","store","configureStore","reducer","counter","counterReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wZAmCeA,I,EAAAA,EA9Bf,SAAiBC,GACb,OACI,eAACC,EAAD,CAAMC,QAASF,EAAMG,gBAAiBC,OAAQJ,EAAMK,KAApD,UACI,cAAC,IAAD,CAAMC,QAAM,EAAZ,SACG,eAACC,EAAD,WACC,6BAAKP,EAAMQ,QACX,4BAAIR,EAAMS,mBAGd,eAACC,EAAD,WACI,cAAC,IAAD,CAAMJ,QAAM,EAAZ,SACA,eAACK,EAAD,WACQ,cAACC,EAAD,UACCZ,EAAMa,cAENb,EAAMc,aACH,cAACC,EAAD,UACCf,EAAMc,mBAMnB,cAACE,EAAD,CAAWC,IAAI,mCASzBhB,EAAOiB,IAAOC,IAAV,+PAMS,SAAAnB,GAAK,qBAAWA,EAAMI,OAAjB,mBAAkCJ,EAAME,QAAxC,SAOlBK,EAAWW,IAAOC,IAAV,mEAKRR,EAAcO,IAAOC,IAAV,6HAQXP,EAAYM,IAAOC,IAAT,2RAgBVJ,EAAcG,YAAON,EAAPM,CAAH,4EAMXF,EAAYE,IAAOE,IAAV,kIAQTV,EAAUQ,IAAOC,IAAV,8B,QChCEE,I,UAAAA,EAvDf,WACI,IAAMC,EAAOC,EAAKC,YAClB,OACI,eAACC,EAAD,WACI,cAAC,EAAD,CACAjB,MAAM,UACNC,YAAY,kCACZN,gBAAgB,cAChBU,YAAY,kBACZC,YAAY,qBACZT,KAAQiB,IAER,cAAC,EAAD,CACAd,MAAM,UACNC,YAAY,kCACZN,gBAAgB,cAChBU,YAAY,kBACZC,YAAY,qBACZT,KAAQiB,IAER,cAAC,EAAD,CACAd,MAAM,UACNC,YAAY,kCACZN,gBAAgB,cAChBU,YAAY,kBACZC,YAAY,qBACZT,KAAQiB,IAER,cAAC,EAAD,CACAd,MAAM,UACNC,YAAY,kCACZN,gBAAgB,cAChBU,YAAY,kBACZC,YAAY,qBACZT,KAAQiB,IAER,cAAC,EAAD,CACAd,MAAM,qCACNC,YAAY,uBACZN,gBAAgB,kBAChBU,YAAY,YACZC,YAAY,aACZT,KAAQiB,IAER,cAAC,EAAD,CACAd,MAAM,cACNC,YAAY,GACZN,gBAAgB,kBAChBU,YAAY,WACZR,KAAQiB,QASdG,EAAYP,IAAOC,IAAV,2C,iBC9BAO,MA9Bf,WACI,OACI,eAAC,EAAD,WACI,4BACI,qBAAKT,IAAI,oBAAoBU,IAAI,OAErC,eAAC,EAAD,WACA,mBAAGC,KAAK,IAAR,qBACA,mBAAGA,KAAK,IAAR,qBACA,mBAAGA,KAAK,IAAR,qBACA,mBAAGA,KAAK,IAAR,wBAEA,eAACC,EAAD,WACA,mBAAGD,KAAK,IAAR,kBACA,mBAAGA,KAAK,IAAR,wBAEA,cAACE,EAAD,IAEA,eAACC,EAAD,WACI,6BAAI,mBAAGH,KAAK,IAAR,uBACJ,6BAAI,mBAAGA,KAAK,IAAR,uBACJ,6BAAI,mBAAGA,KAAK,IAAR,uBACJ,6BAAI,mBAAGA,KAAK,IAAR,uBACJ,6BAAI,mBAAGA,KAAK,IAAR,yCAUdG,EAAab,IAAOC,IAAV,mNAeVM,EAAYP,IAAOC,IAAV,0JAYTa,EAAOd,IAAOC,IAAV,0MAaJU,EAAYX,IAAOC,IAAV,oJAUTW,EAAYZ,YAAOe,IAAPf,CAAF,+DCzEDgB,MATf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,iCCRC,SAASC,IAAwB,IAAbC,EAAY,uDAAH,EAClC,OAAO,IAAIC,SAAQ,SAACC,GAAD,OACjBC,YAAW,kBAAMD,EAAQ,CAAEE,KAAMJ,MAAW,QCAhD,IAUaK,EAAiBC,YAC5B,qBAD4C,uCAE5C,WAAON,GAAP,eAAAO,EAAA,sEACyBR,EAAWC,GADpC,cACQQ,EADR,yBAGSA,EAASJ,MAHlB,2CAF4C,uDASjCK,EAAeC,YAAY,CACtCC,KAAM,UACNC,aArBmB,CACnBC,MAAO,EACPC,OAAQ,QAqBRC,SAAU,CACRC,UAAW,SAACC,GAKVA,EAAMJ,OAAS,GAEjBK,UAAW,SAACD,GACVA,EAAMJ,OAAS,GAGjBM,kBAAmB,SAACF,EAAOG,GACzBH,EAAMJ,OAASO,EAAOC,UAK1BC,cAAe,SAACC,GACdA,EACGC,QAAQnB,EAAeoB,SAAS,SAACR,GAChCA,EAAMH,OAAS,aAEhBU,QAAQnB,EAAeqB,WAAW,SAACT,EAAOG,GACzCH,EAAMH,OAAS,OACfG,EAAMJ,OAASO,EAAOC,cAKvB,EAAoDZ,EAAakB,QAgBzDlB,GAhBR,EAAQO,UAAR,EAAmBE,UAAnB,EAA8BC,kBAgBtBV,EAAf,SCrEamB,GAAQC,YAAe,CAClCC,QAAS,CACPC,QAASC,K,SCOOC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,KAAD,CAAUZ,MAAOA,GAAjB,SACE,cAAC,EAAD,QAGJa,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAACC,GAClCA,EAAaC,kB","file":"static/js/main.b94e8fa9.chunk.js","sourcesContent":["import React from 'react'\r\nimport Styled from \"styled-components\"\r\nimport Fade from 'react-reveal/Fade';\r\n\r\n\r\nfunction Section(props) {\r\n    return (\r\n        <Wrap bgImage={props.backgroundImage} bgRuta={props.ruta}>\r\n            <Fade bottom>            \r\n               <ItemText>\r\n                <h1>{props.title}</h1>\r\n                <p>{props.description}</p>       \r\n                </ItemText>\r\n            </Fade>\r\n            <Buttons>\r\n                <Fade bottom>\r\n                <ButtonGroup>\r\n                        <LeftButton>\r\n                        {props.LButtonText}\r\n                        </LeftButton>\r\n                        {props.RButtonText && // <= ESO ES UN IF, SI EXISTE LA PROPIEDAD ENTRA \r\n                            <RigthButton>\r\n                            {props.RButtonText}\r\n                            </RigthButton>\r\n                        }\r\n\r\n                    </ButtonGroup>\r\n                </Fade>\r\n                <DownArrow src='./images/down-arrow.svg'/>\r\n            </Buttons>\r\n        </Wrap> \r\n        \r\n    )\r\n}\r\n\r\nexport default Section\r\n\r\nconst Wrap = Styled.div`\r\nwidth:100vw;\r\nheight:100vh;\r\nbackground-size:cover;\r\nbackground-position:center;\r\nbackground-repeat:no-repeat;\r\nbackground-image:${props =>`url(\"${props.bgRuta}/images/${props.bgImage}\")`};\r\ndisplay:flex;\r\nflex-direction:column;\r\njustify-content:space-between;\r\nalign-items:center;\r\n`\r\n\r\nconst ItemText = Styled.div`\r\npadding-top:15vh;\r\ntext-align:center;\r\n`\r\n\r\nconst ButtonGroup = Styled.div`\r\ndisplay:flex;\r\nmargin-bottom:30px;\r\n@media(max-width:768px){\r\n    flex-direction:column;\r\n    }\r\n`\r\n\r\nconst LeftButton= Styled.div`\r\nbackground-color:rgba(23, 26, 32, 0.8);\r\nheight:40px;\r\nwidth:256px;\r\ncolor:white;\r\ndisplay:flex;\r\njustify-content:center;\r\nalign-items:center;\r\nborder-radius:100px;\r\nopacity:0.85;\r\ntext-transform:UPPERCASE;\r\nfont-size:12px;\r\ncursor:pointer;\r\nmargin:8px;\r\n`\r\n\r\nconst RigthButton = Styled(LeftButton)`\r\nbackground:white;\r\nopacity:0.65;\r\ncolor:black;\r\n`\r\n\r\nconst DownArrow = Styled.img`\r\nheight:40px;\r\nanimation:animateDown infinite 1.5s;\r\ncursor:pointer;\r\ndisplay:block;\r\nmargin: 0 auto;\r\n`\r\n\r\nconst Buttons = Styled.div`\r\n\r\n`","import React from 'react'\r\nimport Styled from \"styled-components\"\r\nimport Section from './Section'\r\nimport Path from '../config.json'\r\n\r\n\r\nfunction HomePage() {\r\n    const Ruta = Path.pathUrlProd;\r\n    return (\r\n        <Container>\r\n            <Section\r\n            title=\"Model S\"\r\n            description='Order Online Touchless Delivery'\r\n            backgroundImage='model-s.jpg'\r\n            LButtonText='Customize Orden'\r\n            RButtonText='Existing Inventory'\r\n            ruta = {Ruta}\r\n            />\r\n            <Section\r\n            title=\"Model Y\"\r\n            description='Order Online Touchless Delivery'\r\n            backgroundImage='model-y.jpg'\r\n            LButtonText='Customize Orden'\r\n            RButtonText='Existing Inventory'\r\n            ruta = {Ruta}\r\n            />\r\n            <Section\r\n            title=\"Model 3\"\r\n            description='Order Online Touchless Delivery'\r\n            backgroundImage='model-3.jpg'\r\n            LButtonText='Customize Orden'\r\n            RButtonText='Existing Inventory'\r\n            ruta = {Ruta}\r\n            />\r\n            <Section\r\n            title=\"Model X\"\r\n            description='Order Online Touchless Delivery'\r\n            backgroundImage='model-x.jpg'\r\n            LButtonText='Customize Orden'\r\n            RButtonText='Existing Inventory'\r\n            ruta = {Ruta}\r\n            />\r\n            <Section\r\n            title=\"Lowest Cost Solar Panel in America\"\r\n            description='Money Back guarantee'\r\n            backgroundImage='solar-panel.jpg'\r\n            LButtonText='Order Now'\r\n            RButtonText='Learn More'\r\n            ruta = {Ruta}\r\n            />\r\n            <Section\r\n            title=\"Accessories\"\r\n            description=''\r\n            backgroundImage='accessories.jpg'\r\n            LButtonText='Shop Now'\r\n            ruta = {Ruta}\r\n            />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n\r\n\r\nconst Container = Styled.div`\r\nheight:100vh;\r\n`","import React from 'react'\r\nimport Styled from 'styled-components'\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nfunction Header() {\r\n    return (\r\n        <Container>\r\n            <a>\r\n                <img src='./images/logo.svg' alt='' />\r\n            </a>\r\n            <Menu>\r\n            <a href='#'>Model 3</a>\r\n            <a href='#'>Model X</a>\r\n            <a href='#'>Model Y</a>\r\n            <a href='#'>Model S</a>\r\n            </Menu>\r\n            <RigthMenu>\r\n            <a href='#'>Shop</a>\r\n            <a href='#'>Account</a>\r\n            </RigthMenu>\r\n            <CustomMenu/>\r\n\r\n            <BurgerMenu>\r\n                <li><a href='#'>Model 3</a></li>\r\n                <li><a href='#'>Model X</a></li>\r\n                <li><a href='#'>Model Y</a></li>\r\n                <li><a href='#'>Model S</a></li>\r\n                <li><a href='#'>Existing Inventory</a></li>\r\n            </BurgerMenu>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\n\r\nconst BurgerMenu = Styled.div`\r\nposition:fixed;\r\ntop:0;\r\nbottom:0;\r\nright:0;\r\nbackground:white;\r\nwidth:300px;\r\nz-index:16;\r\nlist-style:none;\r\npadding:20px;\r\ndisplay:flex;\r\nflex-direction:column;\r\ntext-align:start;\r\n`\r\n\r\nconst Container = Styled.div`\r\nmin-height:60px;\r\nposition:fixed;\r\ndisplay:flex;\r\nalign-item:center;\r\npadding:0 20px;\r\ntop:0;\r\nleft:0;\r\nright:0;\r\nz-index:1;\r\n`\r\n\r\nconst Menu = Styled.div`\r\ndisplay:flex;\r\nalign-items:center;\r\njustify-content:center;\r\nflex:1;\r\na{\r\n    font-weight:600;\r\n    text-transform:uppercase;\r\n    padding:0 10px;\r\n    flex-wrap=nowrap;\r\n}\r\n`\r\n\r\nconst RigthMenu = Styled.div`\r\ndisplay:flex;\r\nalign-items:center;\r\na{\r\n    font-weight:600;\r\n    text-transform:uppercase;\r\n    margin-right:10px;\r\n}\r\n`\r\n\r\nconst CustomMenu =Styled(MenuIcon)`\r\ncursor:pointer;\r\nmargin-top:15px;\r\n`","import React from 'react';\nimport './App.css';\nimport HomePage from './components/HomePage';\nimport Header from './components/Header';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <HomePage/>\n    </div>\n  );\n}\n\nexport default App;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}